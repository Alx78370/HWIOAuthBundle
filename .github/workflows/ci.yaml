name: CI

on:
  push:
  pull_request:

jobs:
  php-cs-fixer:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      matrix:
        php:
          - '7.4'
      fail-fast: false
    env:
      PHP_CS_FIXER_FUTURE_MODE: '1'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: curl, openssl, mbstring
          ini-values: memory_limit=-1
          tools: pecl, composer, php-cs-fixer
      - name: Run PHP-CS-Fixer fix
        run: php-cs-fixer fix --dry-run --diff --ansi

  phpstan:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      matrix:
        php:
        - '7.4'
      fail-fast: false
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        extensions: curl, openssl, mbstring
        ini-values: memory_limit=-1
        tools: composer
    - name: Remove FOSUser
      run: composer remove friendsofsymfony/user-bundle --no-update --no-interaction --dev
    - name: Update project dependencies
      run: composer update --no-interaction --no-progress --ansi
    - name: Run phpstan
      run: make phpstan

  phpunit:
    name: PHPUnit (PHP ${{ matrix.php }} + ${{ matrix.dependencies }} + ${{ matrix.stability }})
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      SYMFONY_REQUIRE: ${{matrix.symfony-require}}
    strategy:
      matrix:
        php:
          - '7.3'
          - '7.4'
          - '8.0'
          - '8.1'
        dependencies: ['highest']
        symfony-require: ['']
        stability: ['stable']
        include:
          - php: '7.4'
            dependencies: 'lowest'
            stability: 'stable'
          - php: '8.0'
            dependencies: 'lowest'
            stability: 'stable'
          - php: '8.0'
            symfony-require: '5.4.*'
            dependencies: 'highest'
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: pecl, composer
          extensions: intl, bcmath, curl, openssl, mbstring
          ini-values: memory_limit=-1
      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Set Composer minimum-stability
        run: |
          composer config minimum-stability ${{ matrix.stability }}
      - name: Remove FOSUser
        run: composer remove friendsofsymfony/user-bundle --no-update --no-interaction --dev
      - name: Update project dependencies
        run: |
          composer global require --no-progress --no-scripts --no-plugins symfony/flex
      - name: Install Composer dependencies (${{ matrix.dependencies }})
        uses: ramsey/composer-install@v1
        with:
            dependency-versions: ${{ matrix.dependencies }}
            composer-options: --prefer-dist --prefer-stable
      - name: Run PHPUnit tests
        run: |
          mkdir -p build/logs/phpunit
          vendor/bin/phpunit --log-junit build/logs/phpunit/junit.xml
      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: phpunit-logs-php${{ matrix.php }}
          path: build/logs/phpunit
        continue-on-error: true

  phpunit-fosuserbundle:
    name: PHPUnit (PHP ${{ matrix.php }} FOSUserBundle)
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      matrix:
        php:
          - '7.4'
      fail-fast: false
    env:
      SYMFONY_DEPRECATIONS_HELPER: 'weak'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: pecl, composer
          extensions: curl, openssl, mbstring
          ini-values: memory_limit=-1
      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Update project dependencies
        run: composer update --no-interaction --no-progress --ansi --prefer-lowest
      - name: Install PHPUnit
        run: vendor/bin/phpunit --version
      - name: Run PHPUnit tests
        run: vendor/bin/phpunit
